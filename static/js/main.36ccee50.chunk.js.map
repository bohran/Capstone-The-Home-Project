{"version":3,"sources":["img/CoverPhotoBW.png","About.js","Home.js","Events.js","EventForm.js","EventConfirmation.js","EventSubmission.js","AddEvent.js","OrgForm.js","OrgConfirmation.js","OrgSubmission.js","RegOrganization.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Row","class","src","alt","id","Component","Home","dist","bgImage","require","bgImageAlt","strength","style","minHeight","maxHeight","width","marginTop","fontWeight","textShadow","fontSize","Button","href","Service","HOUSING","LEGAL","DAYCENTER","BASIC","HEALTH","Events","props","_this","call","handleCardClick","index","eventName","state","data","eventDescription","organizationName","organizations","address","city","zipcode","date","startTime","endTime","url","capacity","room","contactFirstName","contactLastName","contactEmail","contactPhone","coordinatorFirstName","coordinatorLastName","coordinatorEmail","coordinatorPhone","setState","modal","toggle","handleCategory","event","newCategory","target","category","handleSelect","filter","includes","removeService","addService","console","log","isSelected","service","newServices","_","cloneDeep","push","handleAll","values","s","isLoading","previous","title","description","query","_this2","req","Request","fetch","then","response","json","results","_this3","content","d","matchesCategory","categoryName","matchesService","intersection","services","length","map","i","dt","Col","CardGroup","Card","CardImg","CardBody","CardTitle","Date","getMonth","getDate","CardSubtitle","index_es","icon","faMapMarkerAlt","faClock","moment","format","onClick","bind","textAlign","FormGroup","check","Label","Input","checked","type","name","onChange","display","alignItems","flexDirection","flexWrap","flexBasis","marginLeft","Modal","isOpen","ModalHeader","ModalBody","backgroundColor","float","NewEvent","handleSameAs","contact","document","getElementById","form","coordinatorFName","creatorFName","coordinatorLName","creatorLName","creatorEmail","creatorPhone","Form","orgs","orgList","react_router_dom","to","md","placeholder","inline","onUpdate","descr","county","zip","website","img","variant","onNext","Confirmation","eventForm","onEdit","onConfirm","EventSubmission","handleNext","newStage","currentStage","Stage","EVENT","CONFIRMATION","SUBMISSION","AddEvent","eventFormEntries","orgData","handleSaveEvent","capacityAsInt","parseInt","method","body","JSON","stringify","headers","Headers","Content-Type","ok","text","parse","responseObject","handleConfirm","catch","err","handleChangeEvent","updateEventForm","handleChangeService","option","remove","n","orgOptions","EventForm","EventConfirmation","src_EventSubmission","NewOrg","for","multiple","mission","contactFName","contactLName","contactRole","twitter","facebook","instagram","CustomInput","media","orgForm","instgram","OrgSubmission","ORGANIZATION","EDIT","RegOrganization","orgFormEntries","handleSaveOrg","organizationDescription","organizationType","email","phone","ContactPhone","firstName","lastName","role","handleSubmit","handleChangeOrg","updateOrgForm","handleChangeType","options","types","l","selected","OrgForm","OrgConfirmation","src_OrgSubmission","App","toggleDropdown","dropdownOpen","Navbar","dark","expand","outerHeight","NavbarBrand","NavbarToggler","Collapse","navbar","NavLink","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36ccee50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CoverPhotoBW.c9ff1e79.png\";","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport \"./css/Events.css\";\r\n\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (<div>\r\n        \r\n        \r\n        <h2 className=\"contactPageTitle\">Our Creators</h2>\r\n            <Row>\r\n                <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/shannon.jpg\" alt=\"Portrait of Shannon Gatta\"/>\r\n                    <h3>Shannon Gatta </h3>\r\n                    <h3><small>Data Scientist</small></h3>\r\n                    <p id=\"email\">sgatta@uw.edu</p>\r\n                </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/esha.jpg\"/>\r\n                <h3>Esha More</h3>\r\n                <h3><small>UX Designer</small></h3>\r\n                <p id=\"email\">moree@uw.edu </p> \r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/emma.jpeg\" alt=\"Portrait of Emma Ropes\"/>\r\n                    <h3>Emma Ropes</h3>\r\n                    <h3><small>Web Developer</small></h3>\r\n                    <p id=\"email\">eropes@uw.edu </p> \r\n                </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/nicole.jpg\"/>\r\n                    <h3>Nicole Bohra</h3>\r\n                    <h3><small>Data Scientist</small></h3>\r\n                    <p id=\"email\">bohran@uw.edu</p>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"mdbreact/dist/css/style.css\";\r\n// import { Parallax, ParallaxBanner, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { Parallax } from \"react-parallax\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport \"./css/Home.css\";\r\nimport { About } from \"./About\";\r\n\r\n// TALK WITH EMMA ABOUT STORING THE EVENT IN A DUMMY TABLE UNTIL APPROVED BY PYRAMID\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homeBody\">\r\n        {/* <Parallax */}\r\n        {/* blur={7}\r\n        bgImage={require(\"./img/Seattle-WA.jpg\")}\r\n        strength={1000} */}\r\n        {/* > */}\r\n        {/* <h1 style={{ color: \"white\" , marginTop: \"100px\", fontSize: \"150px\", color: \"#fafaed\"}}>#SeattleForAll</h1> */}\r\n        {/* <div style={{ height: \"200px\" }} /> */}\r\n        {/* </Parallax> */}\r\n        {/* <div className=\"contentBox\"> */}\r\n        {/* <h1 className=\"parallaxTitle\">\r\n            #SeattleForAll\r\n          </h1> */}\r\n        {/* <h1 style ={{fontSize: '6.5rem', fontWeight:'bold'}}>The Home Project</h1>\r\n            <h2>An Engagement and Advocacy Initiative with One Goal:</h2>\r\n            <h2>A Home for Everyone in King County</h2> */}\r\n        {/* </div> */}\r\n        <Parallax\r\n          //   blur={{ min: -15, max: 15 }}\r\n          bgImage={require(\"./img/CoverPhotoBW.png\")}\r\n          bgImageAlt=\"collective pictures of the community\"\r\n          strength={500}\r\n          style={{ minHeight: \"800px\", maxHeight:\"800px\", width: \"100%\" }}\r\n          >\r\n         <div className = \"bannerTitle\" style={{marginTop:\"15%\", fontWeight: \"lighter\",textShadow: \"0 0 100px rgba(0,0,0,500)\"}}>#SeattleForAll</div>\r\n         {/* <div className = \"bannerTitle\" style={{marginTop:\"15%\", color: \"black\"}}>#SeattleForAll</div> */}\r\n\r\n          {/* <div style={{ minHeight: \"600px\", maxHeight:\"600px\", width: \"100%\" }} /> */}\r\n        </Parallax>\r\n        <div className=\"contentBox\">\r\n          <div className=\"missionTitle\" style={{ fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n            The Home Project\r\n          </div>\r\n          <div className=\"slogan\">\r\n            An Engagement and Advocacy Initiative with One Goal: A Home for\r\n            Everyone in King County\r\n          </div>\r\n          <br />\r\n          <div className=\"missionContent\">\r\n            People across our region are frustrated that so many King County\r\n            residents are experiencing homelessness, and are concerned that\r\n            progress is not happening quickly enough, at a large enough scale.\r\n          </div>\r\n          <div className=\"attention\">\r\n            {/* WE KNOW THAT HOMELESSNESS IN KING COUNTY IS SOLVABLE. */}\r\n            We know that homelessness in King County is solvable.\r\n          </div>\r\n          <div className=\"missionContent\">\r\n            And, to solve this problem, the whole community must be invested in\r\n            understanding its causes and supporting its solutions.\r\n          </div>\r\n          <div className=\"missionContent\">\r\n            How we talk about these issues matters. Together, by building common\r\n            understanding about who is experiencing homelessness, why, and what\r\n            we can do about it, we can foster unity and community support for\r\n            our shared path forward.\r\n          </div>{\" \"}\r\n          <br />\r\n          <div>\r\n            <div className=\"learnMore\">\r\n              Learn more about how you can help via our Messaging Toolkits:\r\n            </div>\r\n            <Button className=\"toolkitButton\" href=\"https://drive.google.com/drive/folders/1S2roKWt-aGCMwJwjUvboZDna0C8TG-z0\">\r\n              Toolkits\r\n            </Button>\r\n          </div>\r\n          <div />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardGroup,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./css/Events.css\";\r\n\r\n// TODO: Put in seperate constant file\r\nconst Service = {\r\n  HOUSING: \"Housing/Shelter\",\r\n  LEGAL: \"Legal/Employment\",\r\n  DAYCENTER: \"Day Centers\",\r\n  BASIC: \"Basic Needs\",\r\n  HEALTH: \"Health & Wellness\"\r\n};\r\n\r\nexport class Events extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      isLoading: false,\r\n      data: [],\r\n      value: 0,\r\n      previous: 0,\r\n      title: \"\",\r\n      description: \"\",\r\n      category: \"All\",\r\n      filter: [],\r\n      query: \"\"\r\n    };\r\n  }\r\n\r\n  handleCardClick = index => {\r\n    const eventName = this.state.data[index].eventName;\r\n    const eventDescription = this.state.data[index].eventDescription;\r\n    const organizationName = this.state.data[index].organizations[0];\r\n    const address = this.state.data[index].address;\r\n    const city = this.state.data[index].city;\r\n    const state = this.state.data[index].state;\r\n    const zipcode = this.state.data[index].zipcode;\r\n    const date = this.state.data[index].date;\r\n    const startTime = this.state.data[index].startTime;\r\n    const endTime = this.state.data[index].endTime;\r\n    const url = this.state.data[index].url;\r\n    const capacity = this.state.data[index].capacity;\r\n    const room = this.state.data[index].room;\r\n    const contactFirstName = this.state.data[index].contactFirstName;\r\n    const contactLastName = this.state.data[index].contactLastName;\r\n    const contactEmail = this.state.data[index].contactEmail;\r\n    const contactPhone = this.state.data[index].contactPhone;\r\n    const coordinatorFirstName = this.state.data[index].coordinatorFirstName;\r\n    const coordinatorLastName = this.state.data[index].coordinatorLastName;\r\n    const coordinatorEmail = this.state.data[index].coordinatorEmail;\r\n    const coordinatorPhone = this.state.data[index].coordinatorPhone;\r\n\r\n    this.setState({\r\n      eventName: eventName,\r\n      eventDescription: eventDescription,\r\n      organizationName: organizationName,\r\n      address: address,\r\n      city: city,\r\n      state: state,\r\n      zipcode: zipcode,\r\n      date: date,\r\n      startTime: startTime,\r\n      endTime: endTime,\r\n      url: url,\r\n      capacity: capacity,\r\n      room: room,\r\n      contactFirstName: contactFirstName,\r\n      contactLastName: contactLastName,\r\n      contactEmail: contactEmail,\r\n      contactPhone: contactPhone,\r\n      coordinatorFirstName: coordinatorFirstName,\r\n      coordinatorLastName: coordinatorLastName,\r\n      coordinatorEmail: coordinatorEmail,\r\n      coordinatorPhone: coordinatorPhone,\r\n      modal: true\r\n    });\r\n  };\r\n  // handleInputChange = event => {\r\n  //   const query = event.target.value;\r\n  //   this.setState(prevState => {\r\n  //     const filteredData = prevState.data.filter(element => {\r\n  //       return element.name.includes(query);\r\n  //     });\r\n  //     return {\r\n  //       query,\r\n  //       filteredData\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    let url = \"https://api.emmaropes.me/events\";\r\n    let req = new Request(url);\r\n    fetch(req)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(results => {\r\n        // const { query } = this.state.data;\r\n        // const filteredData = results.filter(element => {\r\n        // return element.name.includes(query);\r\n        // });\r\n        this.setState({\r\n          data: results\r\n          // filteredData\r\n        });\r\n      });\r\n  }\r\n\r\n  handleCategory = event => {\r\n    // Update every field\r\n    let newCategory = event.target.value;\r\n    // Set state og orgFormEntires with new copy\r\n    this.setState({\r\n      category: newCategory\r\n    });\r\n  };\r\n\r\n  handleSelect = event => {\r\n    if (this.state.filter.includes(event.target.value)) {\r\n      this.removeService(event.target.value);\r\n    } else {\r\n      this.addService(event.target.value);\r\n    }\r\n    console.log(this.state.isSelected);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  addService = service => {\r\n    let newServices = _.cloneDeep(this.state.filter);\r\n    newServices.push(service);\r\n    this.setState({\r\n      filter: newServices\r\n    });\r\n  };\r\n\r\n  // handle the All option of Area of Service\r\n  handleAll = event => {\r\n    this.setState({\r\n      filter: _.values(Service)\r\n    });\r\n  };\r\n\r\n  removeService = service => {\r\n    let newServices = _.filter(this.state.filter, s => service !== s);\r\n    this.setState({\r\n      filter: newServices\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const filteredData = this.state.data.filter(d => {\r\n      const matchesCategory =\r\n        d.categoryName === this.state.category || this.state.category === \"All\";\r\n\r\n      //TODO: improve efficiency?\r\n      const serviceOverlap = _.intersection(d.services, this.state.filter);\r\n      const matchesService =\r\n        serviceOverlap.length !== 0 || this.state.filter.length === 0;\r\n      if (matchesCategory && matchesService) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    const content = filteredData.map((d, i) => {\r\n      //   let dates = this.state.data.map((d) => {\r\n      //     return new Date((d.date)).toString();\r\n      // })\r\n      // let imageSrc = d.eventName;\r\n      // if (d.urlToImage == null) {\r\n      //   imageSrc = <br />;\r\n      // } else {\r\n      //   imageSrc = (\r\n      //     <div className=\"image\">\r\n      //       <CardImg\r\n      //         size=\"cover\"\r\n      //         src={imageSrc}\r\n      //         display=\"block\"\r\n      //         alt={d.title}\r\n      //       />\r\n      //     </div>\r\n      //   );\r\n      // }\r\n\r\n      let mlist = [];\r\n      var month_name = function(dt) {\r\n        mlist = [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\"\r\n        ];\r\n        return mlist[dt.getMonth()];\r\n      };\r\n      return (\r\n        <div className=\"events\" key={\"event\" + i}>\r\n          <Row>\r\n            <Col>\r\n              <CardGroup>\r\n                <Card>\r\n                  <div className=\"image\">\r\n                    <CardImg src={d.room} style={{ width: \"100%\" }} />\r\n                    <CardBody>\r\n                      {/* <CardTitle>{d.eventName}</CardTitle> */}\r\n                      <CardTitle>\r\n                        {/* <FontAwesomeIcon icon={faCalendar} /> */}\r\n                        <div className=\"eventMonth\">\r\n                          {\" \" + month_name(new Date(d.date))} <br />\r\n                          <div className=\"eventDay\">\r\n                            {\" \" + new Date(d.date).getDate() + \" \"}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"eventName\">{\" \" + d.eventName}</div>\r\n                      </CardTitle>\r\n                      <CardSubtitle>\r\n                        <div className=\"eventAddress\">\r\n                          <FontAwesomeIcon icon={faMapMarkerAlt} /> {d.address}\r\n                        </div>\r\n                      </CardSubtitle>\r\n                      <CardSubtitle>\r\n                        <div className=\"eventTime\">\r\n                          <FontAwesomeIcon icon={faClock} />{\" \"}\r\n                          {moment(d.startTime, \"HH:mm:ss\").format(\"h:mm A\")} -{\" \"}\r\n                          {moment(d.endTime, \"HH:mm:ss\").format(\"h:mm A\")}\r\n                        </div>\r\n                      </CardSubtitle>\r\n                      <Button\r\n                        className=\"learn\"\r\n                        onClick={this.handleCardClick.bind(null, i)}\r\n                      >\r\n                        learn more\r\n                      </Button>\r\n                    </CardBody>\r\n                  </div>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        {/* <div className=\"searchForm\">\r\n          <form>\r\n            <input\r\n              placeholder=\"Search for...\"\r\n              value={this.state.query}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </form>\r\n          <div>\r\n            {this.state.filteredData.map(i => (\r\n              <p>{i.name}</p>\r\n            ))}\r\n          </div>\r\n        </div> */}\r\n        <h2 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n          Events that match your search:\r\n        </h2>\r\n        {/* <div className=\"add\">\r\n          <h4>New Organization?</h4>\r\n          <Button tag = {Link} to=\"/RegOrganization\">\r\n            + Add Organization\r\n          </Button>\r\n          <br />\r\n          <Button tag= {Link} to =\"/AddEvent\">\r\n            + Add Event\r\n          </Button>\r\n        </div> */}\r\n        {/* <Nav vertical className=\"sidebar\"> */}\r\n        <div className=\"sidebarFilter\">\r\n          <div className=\"categories\">\r\n            <h5>Select an Action:</h5>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.category === \"All\"}\r\n                  type=\"radio\"\r\n                  name=\"radio1\"\r\n                  value={\"All\"}\r\n                  onChange={this.handleCategory}\r\n                />{\" \"}\r\n                All\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"radio1\"\r\n                  value={\"Give\"}\r\n                  onChange={this.handleCategory}\r\n                />{\" \"}\r\n                Give\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"radio1\"\r\n                  value={\"Learn\"}\r\n                  onChange={this.handleCategory}\r\n                />{\" \"}\r\n                Learn\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"radio1\"\r\n                  value={\"Volunteer\"}\r\n                  onChange={this.handleCategory}\r\n                />{\" \"}\r\n                Volunteer\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"radio1\"\r\n                  value={\"Activism\"}\r\n                  onChange={this.handleCategory}\r\n                />{\" \"}\r\n                Activism\r\n              </Label>\r\n            </FormGroup>\r\n          </div>\r\n          <br />\r\n          <div className=\"filters\">\r\n            <h5>Select Area of Service:</h5>\r\n            {/* <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={\"All\"}\r\n                  onChange={this.handleAll}\r\n                />{\" \"}\r\n                All\r\n              </Label>\r\n            </FormGroup> */}\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.filter.includes(Service.HOUSING)}\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={Service.HOUSING}\r\n                  onChange={this.handleSelect}\r\n                />{\" \"}\r\n                {Service.HOUSING}\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.filter.includes(Service.LEGAL)}\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={Service.LEGAL}\r\n                  onChange={this.handleSelect}\r\n                />{\" \"}\r\n                {Service.LEGAL}\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.filter.includes(Service.DAYCENTER)}\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={Service.DAYCENTER}\r\n                  onChange={this.handleSelect}\r\n                />{\" \"}\r\n                {Service.DAYCENTER}\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.filter.includes(Service.BASIC)}\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={\"Basic Needs\"}\r\n                  onChange={this.handleSelect}\r\n                />{\" \"}\r\n                {Service.BASIC}\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  checked={this.state.filter.includes(Service.HEALTH)}\r\n                  type=\"checkbox\"\r\n                  name=\"check1\"\r\n                  value={Service.HEALTH}\r\n                  onChange={this.handleSelect}\r\n                />{\" \"}\r\n                {Service.HEALTH}\r\n              </Label>\r\n            </FormGroup>\r\n            <br />\r\n            <div className=\"location\">\r\n              <h5>Select Location:</h5>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> All\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Seattle\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Bellevue\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Everett\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Burien\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Kirkland\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Bothell\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Renton\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Redmond\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Tacoma\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Olympia\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Lakewood\r\n                </Label>\r\n              </FormGroup>\r\n            </div>\r\n            <br />\r\n            <div className=\"date\">\r\n              <h5>Select Date:</h5>\r\n              <FormGroup>\r\n                <Input\r\n                  style={{ width: \"50%\" }}\r\n                  type=\"select\"\r\n                  id=\"exampleSelect\"\r\n                >\r\n                  <option>All</option>\r\n                  <option>Today</option>\r\n                  <option>Tomorrow</option>\r\n                  <option>This Week</option>\r\n                  <option>This Weekend</option>\r\n                  <option>This Month</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </Nav> */}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"align-self\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            flexBasis: 1,\r\n            marginLeft: \"50px\"\r\n          }}\r\n        >\r\n          {content}\r\n\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalHeader>{this.state.eventName}.</ModalHeader>\r\n            <ModalBody>\r\n              Organization:\r\n              {this.state.organizationName}\r\n              <br />\r\n              Description:\r\n              {\" \" + this.state.eventDescription}\r\n              <br />\r\n              Address:\r\n              {\" \" + this.state.address},{\" \" + this.state.city},{\" \"}\r\n              {\" \" + this.state.zipcode},\r\n              <br />\r\n              Date:\r\n              {\" \" + this.state.date}\r\n              <br />\r\n              Time:\r\n              {\" \" + this.state.startTime} - {\" \" + this.state.endTime}\r\n              <br />\r\n              Event Website: <a href={\" \" + this.state.url + \" \"}>Visit Site</a>\r\n              <br />\r\n              Capacity:\r\n              {\" \" + this.state.capacity}\r\n              <br />\r\n              Event Coordinator Contact Information:\r\n              {\" \" + this.state.coordinatorFirstName}\r\n              <br />\r\n              {\" \" + this.state.coordinatorLastName}\r\n              <br />\r\n              {\" \" + this.state.coordinatorEmail}\r\n              <br />\r\n              {\" \" + this.state.coordinatorPhone}\r\n            </ModalBody>\r\n\r\n            <Button\r\n              style={{\r\n                backgroundColor: \" #cf0f2e\",\r\n                width: \"90px\",\r\n                float: \"right\",\r\n                marginLeft: \"80%\"\r\n              }}\r\n              onClick={this.toggle}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n// import \"./css/form.css\";\r\n\r\nclass NewEvent extends Component {\r\n  // componentDidMount() {\r\n  //   let url = \"https://api.emmaropes.me/organizations\";\r\n  //   let req = new Request(url);\r\n  //   fetch(req)\r\n  //     .then(response => {\r\n  //       return response.json();\r\n  //     })\r\n  //     .then(results => {\r\n  //       console.log(results);\r\n  //       this.setState({\r\n  //         orgList: results\r\n  //       });\r\n  //     });\r\n  // }\r\n\r\n  // let orgOptions =\r\n  handleSameAs = () => {\r\n    var contact = document.getElementById(\"coordInfo\");\r\n    if (contact.style.display === \"block\") {\r\n      contact.style.display = \"none\";\r\n      this.props.form.coordinatorFName = this.props.form.creatorFName;\r\n      this.props.form.coordinatorLName = this.props.form.creatorLName;\r\n      this.props.form.coordinatorEmail = this.props.form.creatorEmail;\r\n      this.props.form.coordinatorPhone = this.props.form.creatorPhone;\r\n    } else {\r\n      contact.style.display = \"block\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"pageTitle\">ADD A NEW EVENT</h2>\r\n\r\n        <div className=\"addEvent\">\r\n          <Form>\r\n            <h5 className=\"formTitle\">Select Your Organization</h5>\r\n            <FormGroup>\r\n              {/* <Label>Select Your Organization</Label> */}\r\n              <Input\r\n                type=\"select\"\r\n                name=\"org\"\r\n                value={this.props.form.orgs}\r\n                onChange={this.props.onChange}\r\n              >\r\n                {\" \"}\r\n                {this.props.orgList}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <h6 className=\"help\">\r\n              Don't see your Organization listed?{\" \"}\r\n              <Link className=\"helpLink\" to=\"/RegOrganization\">\r\n                Register it here.\r\n              </Link>\r\n            </h6>\r\n\r\n            <h5 className=\"formTitle\">Event Information</h5>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.title}\r\n                    onChange={this.props.onChange}\r\n                    // isRequired={true}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.props.form.category}\r\n                    onChange={this.props.onChange}\r\n                  >\r\n                    <option>Give</option>\r\n                    <option>Learn</option>\r\n                    <option>Volunteer</option>\r\n                    <option>Activism</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h6>Area of Service</h6>\r\n            <div>\r\n              <FormGroup check inline>\r\n                <Input\r\n                  checked={this.props.form.services.includes(\"Housing/Shelter\")}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={\"Housing/Shelter\"}\r\n                  onChange={this.props.onUpdate}\r\n                />{\" \"}\r\n                <Label check>Housing/Shelter</Label>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Input\r\n                checked={this.props.form.services.includes(\"Employment\")}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={\"Employment\"}\r\n                  onChange={this.props.onUpdate}\r\n                />{\" \"}\r\n                <Label check>Employment</Label>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Input\r\n                checked={this.props.form.services.includes(\"Day Center\")}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={\"Day Center\"}\r\n                  onChange={this.props.onUpdate}\r\n                />{\" \"}\r\n                <Label check>Day Center</Label>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Input\r\n                checked={this.props.form.services.includes(\"Basic Needs\")}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={\"Basic Needs\"}\r\n                  onChange={this.props.onUpdate}\r\n                />{\" \"}\r\n                <Label check>Basic Needs</Label>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Input\r\n                checked={this.props.form.services.includes(\"Health & Wellness\")}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={\"Health & Wellness\"}\r\n                  onChange={this.props.onUpdate}\r\n                />{\" \"}\r\n                <Label check>{\"Health & Wellness\"}</Label>\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <FormGroup>\r\n              <Label>Description</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"descr\"\r\n                placeholder=\"Enter text\"\r\n                value={this.props.form.descr}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Event Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={this.props.form.date}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Start Time</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    name=\"startTime\"\r\n                    value={this.props.form.startTime}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>End Time</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    name=\"endTime\"\r\n                    value={this.props.form.endTime}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={8}>\r\n                <FormGroup>\r\n                  <Label>Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    placeholder=\"e.g. 1234 Main St.\"\r\n                    value={this.props.form.address}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormGroup>\r\n                  <Label>Room</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"room\"\r\n                    placeholder=\"e.g. 101\"\r\n                    value={this.props.form.room}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormGroup>\r\n                  <Label>Event Capacity</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"capacity\"\r\n                    placeholder=\"e.g. 40\"\r\n                    value={this.props.form.capacity}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>City</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    placeholder=\"e.g. Seattle\"\r\n                    value={this.props.form.city}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>County</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"county\"\r\n                    placeholder=\"e.g. King\"\r\n                    value={this.props.form.county}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormGroup>\r\n                  <Label>Zip Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    placeholder=\"e.g. 98105\"\r\n                    value={this.props.form.zip}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormGroup>\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"state\"\r\n                    placeholder=\"e.g. WA\"\r\n                    value={this.props.form.state}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5 className=\"formTitle\">Event Contact Information</h5>\r\n            <h3 className=\"subtitle\">\r\n              This information is used to confirm any changes in the event\r\n              details\r\n            </h3>\r\n\r\n            <Row form>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>First Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"creatorFName\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.creatorFName}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Last Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"creatorLName\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.creatorLName}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"creatorEmail\"\r\n                    placeholder=\"Enter email\"\r\n                    value={this.props.form.creatorEmail}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Phone</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"creatorPhone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={this.props.form.creatorPhone}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5 className=\"formTitle\">Event Coordinator Information</h5>\r\n            <h3 className=\"subtitle\">\r\n              This information will be used by interested volunteers and\r\n              participants who want to get invovled\r\n            </h3>\r\n            <div className=\"formChecks\">\r\n              <FormGroup check inline>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  name=\"coordinatorInfo\"\r\n                  onClick={this.handleSameAs}\r\n                />{\" \"}\r\n                <Label check>Same As Event Contact Information</Label>\r\n              </FormGroup>\r\n            </div>\r\n\r\n            <div id=\"coordInfo\" style={{ display: \"block\" }}>\r\n              <Row form>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label>First Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"coordinatorFName\"\r\n                      placeholder=\"Enter text\"\r\n                      value={this.props.form.coordinatorFName}\r\n                      onChange={this.props.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label>Last Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"coordinatorLName\"\r\n                      placeholder=\"Enter text\"\r\n                      value={this.props.form.coordinatorLName}\r\n                      onChange={this.props.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"coordinatorEmail\"\r\n                      placeholder=\"Enter email\"\r\n                      value={this.props.form.coordinatorEmail}\r\n                      onChange={this.props.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <FormGroup>\r\n                    <Label>Phone</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"coordinatorPhone\"\r\n                      placeholder=\"Enter phone\"\r\n                      value={this.props.form.coordinatorPhone}\r\n                      onChange={this.props.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n            <h5 className=\"formTitle\">Additional Event Information</h5>\r\n\r\n            <FormGroup>\r\n              <Label>Website</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"website\"\r\n                placeholder=\"Enter URL\"\r\n                value={this.props.form.website}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <h5>Cover Photo</h5>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Link</Label>\r\n                  <Input\r\n                    type=\"test\"\r\n                    name=\"img\"\r\n                    placeholder=\"Enter URL\"\r\n                    value={this.props.form.img}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Browse Default</Label>\r\n                  <Input\r\n                    type=\"test\"\r\n                    name=\"img\"\r\n                    placeholder=\"Enter URL\"\r\n                    value={this.props.form.img}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"formButton\">\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            value=\"1\"\r\n            onClick={this.props.onNext}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewEvent.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  orgList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default NewEvent;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, FormGroup, Label, Row, Col } from \"reactstrap\";\r\n\r\nclass Confirmation extends Component {\r\n  render() {\r\n    console.log(this.props.eventForm.services);\r\n    let services = this.props.eventForm.services.map((d, i) => {\r\n      if (i + 1 !== this.props.eventForm.services.length) {\r\n        return d + \", \";\r\n      } else {\r\n        return d;\r\n      }\r\n    });\r\n    return (\r\n      <section>\r\n        <h2 className=\"pageTitle\">CONFIRM YOUR EVENT DETAILS</h2>\r\n\r\n        <div className=\"addEvent\">\r\n          <Form>\r\n            <h6>\r\n              Please confirm the following information before submitting. If you\r\n              need to make edits, select the edit button below the form.\r\n            </h6>\r\n            <br />\r\n            <h5 className=\"formTitle\">Event Information</h5>\r\n            <FormGroup>\r\n              <Label>Organization: {this.props.eventForm.orgs}</Label>\r\n            </FormGroup>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Title: {this.props.eventForm.title}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Type: {this.props.eventForm.category}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Area(s) of Service: {services}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Description: {this.props.eventForm.descr}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Event Date: {this.props.eventForm.date}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>\r\n                    Time: {this.props.eventForm.startTime} to{\" \"}\r\n                    {this.props.eventForm.endTime}\r\n                  </Label>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>End Time: {this.props.eventForm.endTime}</Label>\r\n                </FormGroup>\r\n              </Col> */}\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Address: {this.props.eventForm.address}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Room: {this.props.eventForm.room}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Event Capacity: {this.props.eventForm.capacity}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>City: {this.props.eventForm.city}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>County: {this.props.eventForm.county}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Zip Code: {this.props.eventForm.zip}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>State: {this.props.eventForm.state}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5 className=\"formTitle\">Event Contact Information</h5>\r\n            <Row form>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>First Name: {this.props.eventForm.creatorFName}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Last Name: {this.props.eventForm.creatorLName}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Email: {this.props.eventForm.creatorEmail}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Phone: {this.props.eventForm.creatorPhone}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5 className=\"formTitle\">Event Coordinator Information</h5>\r\n            <Row form>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>\r\n                    First Name: {this.props.eventForm.coordinatorFName}\r\n                  </Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>\r\n                    Last Name: {this.props.eventForm.coordinatorLName}\r\n                  </Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Email: {this.props.eventForm.coordinatorEmail}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label>Phone: {this.props.eventForm.coordinatorPhone}</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5 className=\"formTitle\">Additional Event Information</h5>\r\n\r\n            <FormGroup>\r\n              <Label>Website: {this.props.eventForm.website}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Media: {this.props.eventForm.img}</Label>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n        <div className=\"formButton\">\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            value=\"0\"\r\n            onClick={this.props.onEdit}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            value=\"2\"\r\n            onClick={this.props.onConfirm}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  eventForm: PropTypes.object.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onConfirm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass EventSubmission extends Component {\r\n  handleNext = () => {\r\n    let newStage = this.state.currentStage + 1;\r\n    this.setState({\r\n      currentStage: newStage\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"formContainer\">\r\n          <div>\r\n            <h1>Your event has been submitted for approval!</h1>\r\n            <p>\r\n              We've sent your event to Pyramid for approval. The event should be\r\n              approved in the next business day. Please contact us at\r\n              eropes@uw.edu to make changes to your event posting or any other\r\n              inquiries related to your event.\r\n            </p>\r\n          </div>\r\n          <div className=\"buttonContainer\">\r\n          <Link to=\"/AddEvent\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Add Another Event\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/Events\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Back to Calendar\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default EventSubmission;\r\n","// Add Event route takes you here\r\nimport React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport NewEvent from \"./EventForm\";\r\nimport Confirmation from \"./EventConfirmation\";\r\nimport EventSubmission from \"./EventSubmission\";\r\nimport \"./css/form.css\";\r\nimport \"./css/confirm.css\";\r\n\r\nconst Stage = {\r\n  EVENT: 0,\r\n  CONFIRMATION: 1,\r\n  SUBMISSION: 2\r\n};\r\n\r\nexport default class AddEvent extends Component {\r\n  state = {\r\n    currentStage: Stage.EVENT,\r\n    // ONLY place where the data exists\r\n    eventFormEntries: {\r\n      title: \"\",\r\n      category: \"\",\r\n      orgs: [],\r\n      services: [],\r\n      descr: \"\",\r\n      date: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      address: \"\",\r\n      room: \"\",\r\n      city: \"\",\r\n      capacity: 0,\r\n      county: \"\",\r\n      zip: \"\",\r\n      state: \"\",\r\n      creatorFName: \"\",\r\n      creatorLName: \"\",\r\n      creatorEmail: \"\",\r\n      creatorPhone: \"\",\r\n      coordinatorFName: \"\",\r\n      coordinatorLName: \"\",\r\n      coordinatorEmail: \"\",\r\n      coordinatorPhone: \"\",\r\n      website: \"\",\r\n      img: \"https://i.ytimg.com/vi/Ll4HftFKjD8/maxresdefault.jpg\"\r\n    },\r\n    orgData: []\r\n  };\r\n\r\n  handleSaveEvent = () => {\r\n    var capacityAsInt = parseInt(this.state.eventFormEntries.capacity, 10);\r\n    let url = \"https://api.emmaropes.me/events\";\r\n    fetch(url, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        categoryName: this.state.eventFormEntries.category,\r\n        eventName: this.state.eventFormEntries.title,\r\n        eventDescription: this.state.eventFormEntries.descr,\r\n        address: this.state.eventFormEntries.address,\r\n        city: this.state.eventFormEntries.city,\r\n        state: this.state.eventFormEntries.state,\r\n        zipcode: this.state.eventFormEntries.zip,\r\n        date: this.state.eventFormEntries.date,\r\n        startTime: this.state.eventFormEntries.startTime,\r\n        endTime: this.state.eventFormEntries.endTime,\r\n        county: this.state.eventFormEntries.county,\r\n        url: this.state.eventFormEntries.website,\r\n        capacity: capacityAsInt,\r\n        room: this.state.eventFormEntries.room,\r\n        contactEmail: this.state.eventFormEntries.creatorEmail,\r\n        contactPhone: this.state.eventFormEntries.creatorPhone,\r\n        contactFirstName: this.state.eventFormEntries.creatorFName,\r\n        contactLastName: this.state.eventFormEntries.creatorLName,\r\n        services: this.state.eventFormEntries.services,\r\n        organizations: this.state.eventFormEntries.orgs\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.text();\r\n        }\r\n        throw response.text();\r\n      })\r\n      .then(text => {\r\n        console.log(text);\r\n        return JSON.parse(text);\r\n      })\r\n      .then(responseObject => {\r\n        this.handleConfirm();\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"ERROR!\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // change eventForms\r\n  handleChangeEvent = event => {\r\n    console.log(event.target.value);\r\n    // Copy of eventFormEntries\r\n    let updateEventForm = _.cloneDeep(this.state.eventFormEntries);\r\n    // Check for each field\r\n    updateEventForm[event.target.name] = event.target.value;\r\n    // Set state to new form\r\n    this.setState({\r\n      eventFormEntries: updateEventForm\r\n    });\r\n  };\r\n\r\n  handleChangeService = event => {\r\n    console.log(event.target.value);\r\n    let newServices = _.cloneDeep(this.state.eventFormEntries.services);\r\n    var option = event.target.value;\r\n    if(newServices.includes(option)) {\r\n      newServices = _.remove(newServices, function(n) {\r\n        return n !== option\r\n      })\r\n    } else {\r\n      newServices.push(option);\r\n    }\r\n    console.log(newServices);\r\n    let updateEventForm = _.cloneDeep(this.state.eventFormEntries);\r\n\r\n    updateEventForm.services = newServices;\r\n\r\n    this.setState({\r\n      eventFormEntries: updateEventForm\r\n    });\r\n  };\r\n\r\n  //change eventForms\r\n  handleNext = event => {\r\n    console.log(event.target.value);\r\n    if (event.target.value === \"1\") {\r\n      this.setState({\r\n        currentStage: Stage.CONFIRMATION\r\n      });\r\n    } else if (event.target.value === \"0\") {\r\n      this.setState({\r\n        currentStage: Stage.EVENT\r\n      });\r\n    } else if (event.target.value === null) {\r\n    }\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    this.setState({\r\n      currentStage: Stage.SUBMISSION\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let url = \"https://api.emmaropes.me/organizations\";\r\n    let req = new Request(url);\r\n    fetch(req)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(results => {\r\n        this.setState({\r\n          orgData: results\r\n        });\r\n      });\r\n    console.log(this.state.orgData);\r\n  }\r\n\r\n  render() {\r\n    let orgOptions = this.state.orgData.map((d, i) => {\r\n      return <option key={d.organizationName + i}>{d.organizationName}</option>;\r\n    });\r\n    let content = \"\";\r\n    if (this.state.currentStage === Stage.EVENT) {\r\n      content = (\r\n        <NewEvent\r\n          form={this.state.eventFormEntries}\r\n          onChange={this.handleChangeEvent}\r\n          onUpdate={this.handleChangeService}\r\n          onNext={this.handleNext}\r\n          orgList={orgOptions}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.CONFIRMATION) {\r\n      content = (\r\n        <Confirmation\r\n          eventForm={this.state.eventFormEntries}\r\n          onEdit={this.handleNext}\r\n          onConfirm={this.handleSaveEvent}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.SUBMISSION) {\r\n      content = <EventSubmission />;\r\n    }\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/Organization.css\";\r\n\r\nclass NewOrg extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"pageTitle\">Add Your Organization</h2>\r\n        <div className=\"addOrg\">\r\n          <Form>\r\n            <h5>Organization Information</h5>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.name}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"exampleSelect\">Category</Label>\r\n                  <Input\r\n                    multiple={true}\r\n                    type=\"select\"\r\n                    name=\"type\"\r\n                    value={this.props.form.type}\r\n                    onChange={this.props.onUpdate}\r\n                  >\r\n                    <option>Housing (Permanent)</option>\r\n                    <option>Shelter (Not Permanent)</option>\r\n                    <option>Rapid Re-housing</option>\r\n                    <option>Transitional Housing</option>\r\n                    <option>Urban Encampments</option>\r\n                    <option>Housing Search </option>\r\n                    <option>Diversion</option>\r\n                    <option>Safe Parking</option>\r\n                    <option>Women's/Family Drop-In</option>\r\n                    <option>YYA Drop-In</option>\r\n                    <option>Men's Drop-In</option>\r\n                    <option>General Population Drop-In</option>\r\n                    <option>Legal Services / Eviction</option>\r\n                    <option>Case Management</option>\r\n                    <option>Employment Search</option>\r\n                    <option>Clothing</option>\r\n                    <option>Food</option>\r\n                    <option>Shower/Laundry</option>\r\n                    <option>Toiletries</option>\r\n                    <option>Storage</option>\r\n                    <option>Medical / Health</option>\r\n                    <option>Social / Emotional</option>\r\n                    <option>Dental Care</option>\r\n                    <option>Addiction Recovery</option>\r\n                    <option>Mental Health</option>\r\n                    <option>Domestic Violence Support</option>\r\n                    <option>Emergency/ Crisis Hotline</option>\r\n                    <option>Mailing Address</option>\r\n                    <option>Phone and Computer Access</option>\r\n                    <option>Transportation Assistance</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormGroup>\r\n              <Label>Mission Statement</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"mission\"\r\n                placeholder=\"Enter text\"\r\n                value={this.props.form.mission}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Row form>\r\n              <Col md={10}>\r\n                <FormGroup>\r\n                  <Label>Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    placeholder=\"e.g. 1234 Main St.\"\r\n                    value={this.props.form.address}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={2}>\r\n                <FormGroup>\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"state\"\r\n                    placeholder=\"e.g. WA\"\r\n                    value={this.props.form.state}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>City</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    placeholder=\"e.g. Seattle\"\r\n                    value={this.props.form.city}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Zip Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"zip\"\r\n                    placeholder=\"e.g. 98105\"\r\n                    value={this.props.form.zip}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>County</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"county\"\r\n                    placeholder=\"e.g. King\"\r\n                    value={this.props.form.county}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5>Organization Contact</h5>\r\n            <h3 className=\"subtitle\">\r\n              This information will be used to confirm any changes in the\r\n              organization details\r\n            </h3>\r\n\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>First Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactFName\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.contactFName}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Last Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactLName\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.contactLName}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Role</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactRole\"\r\n                    placeholder=\"Enter text\"\r\n                    value={this.props.form.contactRole}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Phone</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactPhone\"\r\n                    placeholder=\"e.g. (123)-456-7890\"\r\n                    value={this.props.form.contactPhone}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"contactEmail\"\r\n                    placeholder=\"Enter email\"\r\n                    value={this.props.form.contactEmail}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <h5>Additional Information</h5>\r\n            <FormGroup>\r\n              <Label>Website</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"website\"\r\n                placeholder=\"Enter URL\"\r\n                value={this.props.form.website}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Twitter</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"twitter\"\r\n                    placeholder=\"Enter handle\"\r\n                    value={this.props.form.twitter}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Facebook</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facebook\"\r\n                    placeholder=\"Enter URL\"\r\n                    value={this.props.form.facebook}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label>Instagram</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"instagram\"\r\n                    placeholder=\"Enter username\"\r\n                    value={this.props.form.instagram}\r\n                    onChange={this.props.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormGroup>\r\n              <Label>Select Cover Photo</Label>\r\n              <CustomInput\r\n                id=\"mediaButton\"\r\n                type=\"file\"\r\n                name=\"img\"\r\n                value={this.props.form.media}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          value=\"1\"\r\n          onClick={this.props.onNext}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewOrg.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  onNext: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewOrg;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, FormGroup, Label } from \"reactstrap\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass Confirmation extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h2 className=\"orgPageTitle\">Almost there.</h2>\r\n\r\n        <div className=\"addOrg\">\r\n          <Form>\r\n            <h6>Please confirm your information before submitting.</h6>\r\n            <h5>Organization Information</h5>\r\n            <FormGroup>\r\n              <Label>Organization Name: {this.props.orgForm.name}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization Type: {this.props.orgForm.type}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Mission: {this.props.orgForm.mission}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization Address: {this.props.orgForm.address}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization State: {this.props.orgForm.state}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization City: {this.props.orgForm.city}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization County: {this.props.orgForm.county}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization Zip Code: {this.props.orgForm.zip}</Label>\r\n            </FormGroup>\r\n\r\n            <h5>Organization Contact</h5>\r\n\r\n            <FormGroup>\r\n              <Label>First Name: {this.props.orgForm.contactFName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Last Name: {this.props.orgForm.contactLName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Role: {this.props.orgForm.contactRole}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Email: {this.props.orgForm.contactEmail}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Phone: {this.props.orgForm.contactPhone}</Label>\r\n            </FormGroup>\r\n\r\n            <h5>Additional Information</h5>\r\n            <FormGroup>\r\n              <Label>Website: {this.props.orgForm.website}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Twitter: {this.props.orgForm.twitter}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Facebook: {this.props.orgForm.facebook}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Instagram: {this.props.orgForm.instgram}</Label>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n        \r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          value=\"0\"\r\n          onClick={this.props.onNext}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          value=\"2\"\r\n          onClick={this.props.onConfirm}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  orgForm: PropTypes.object.isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  onConfirm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass OrgSubmission extends Component {\r\n  // handleNext = () => {\r\n  //   let newStage = this.state.currentStage + 1;\r\n  //   this.setState({\r\n  //     currentStage: newStage\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"formContainer\">\r\n          <div>\r\n            <h1>Your organization has been submitted for approval!</h1>\r\n            <p>\r\n              We've sent your organization information to Pyramid for approval.\r\n              The organization should be approved in the next business day.\r\n              Please contact us at eropes@uw.edu to make changes to your event\r\n              posting or any other inquiries related to your event.\r\n            </p>\r\n          </div>\r\n          <div className=\"buttonContainer\">\r\n            <Link to=\"/AddEvent\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Add Event\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/Events\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Back to Calendar\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default OrgSubmission;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport NewOrg from \"./OrgForm\";\r\nimport Confirmation from \"./OrgConfirmation\";\r\nimport OrgSubmission from \"./OrgSubmission\";\r\n\r\nconst Stage = {\r\n  ORGANIZATION: 0,\r\n  CONFIRMATION: 1,\r\n  EDIT: 2,\r\n  SUBMISSION: 3\r\n};\r\n\r\nexport default class RegOrganization extends Component {\r\n  state = {\r\n    currentStage: Stage.ORGANIZATION,\r\n    // ONLY place where the data exists\r\n    orgFormEntries: {\r\n      name: \"Tent Cities\",\r\n      type: [\"Housing (Permanent)\"],\r\n      mission: \"Providing immediate shelter for various people experiencing homelessness.\",\r\n      address: \"223rd Main St.\",\r\n      state: \"WA\",\r\n      city: \"Kirkland\",\r\n      county: \"King\",\r\n      zip: \"98032\",\r\n      contactFName: \"Ash\",\r\n      contactLName: \"Renner\",\r\n      contactRole: \"Media Manager\",\r\n      contactPhone: \"\",\r\n      contactEmail: \"aRenner@live.com\",\r\n      website: \"\",\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      instagram: \"\",\r\n      img: \"\"\r\n    }\r\n  };\r\n\r\n  handleSaveOrg = () => {\r\n    let url = \"https://api.emmaropes.me/organizations\";\r\n    fetch(url, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        organizationName: this.state.orgFormEntries.name,\r\n        organizationDescription: this.state.orgFormEntries.mission,\r\n        address: this.state.orgFormEntries.address,\r\n        city: this.state.orgFormEntries.city,\r\n        state: this.state.orgFormEntries.state,\r\n        zipcode: this.state.orgFormEntries.zip,\r\n        county: this.state.orgFormEntries.county,\r\n        organizationType: this.state.orgFormEntries.type,\r\n        url: this.state.orgFormEntries.website,\r\n        email: this.state.orgFormEntries.contactEmail,\r\n        phone: this.state.orgFormEntries.ContactPhone,\r\n        firstName: this.state.orgFormEntries.contactFName,\r\n        lastName: this.state.orgFormEntries.contactLName,\r\n        role: this.state.orgFormEntries.contactRole,\r\n        twitter: this.state.orgFormEntries.twitter,\r\n        instagram: this.state.orgFormEntries.instagram,\r\n        facebook: this.state.orgFormEntries.facebook\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\"\r\n        // 'Accept': 'application/json'\r\n      })\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.text();\r\n        }\r\n        throw response.text();\r\n      })\r\n      .then(text => {\r\n        console.log(text);\r\n        return JSON.parse(text);\r\n      })\r\n      .then(responseObject => {\r\n        this.handleSubmit();\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"ERROR!\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // change orgForms\r\n  handleChangeOrg = event => {\r\n    // Copy orgFormEntries\r\n    let updateOrgForm = _.cloneDeep(this.state.orgFormEntries);\r\n    // Update every field\r\n    updateOrgForm[event.target.name] = event.target.value;\r\n    // Set state og orgFormEntires with new copy\r\n    this.setState({\r\n      orgFormEntries: updateOrgForm\r\n    });\r\n  };\r\n\r\n  handleChangeType = event => {\r\n    var options = event.target.options;\r\n    var types = this.state.orgFormEntries.type;\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected) {\r\n        types.push(options[i].value);\r\n      }\r\n    }\r\n    this.setState({\r\n      orgFormEntries: {\r\n        type: types\r\n      }\r\n    });\r\n    console.log(this.state.orgFormEntries.type);\r\n    // this.props.someCallback(types);\r\n  };\r\n\r\n  //change eventForms\r\n  handleNext = event => {\r\n    console.log(event.target.value)\r\n    if(event.target.value === \"1\") {\r\n      this.setState({\r\n        currentStage: Stage.CONFIRMATION\r\n      });\r\n    } else if(event.target.value === \"0\") {\r\n      this.setState({\r\n        currentStage: Stage.ORGANIZATION\r\n      });\r\n    }\r\n    // let newStage = this.state.currentStage + 1;\r\n    // this.setState({\r\n    //   currentStage: newStage\r\n    // });\r\n  };\r\n\r\n  handleSubmit = () =>\r\n    this.setState({\r\n      currentStage: Stage.SUBMISSION\r\n    });\r\n\r\n  render() {\r\n    let content = \"\";\r\n    if (this.state.currentStage === Stage.ORGANIZATION) {\r\n      content = (\r\n        <NewOrg\r\n          form={this.state.orgFormEntries}\r\n          onChange={this.handleChangeOrg}\r\n          onUpdate={this.handleChangeType}\r\n          onNext={this.handleNext}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.CONFIRMATION) {\r\n      content = (\r\n        <Confirmation\r\n          orgForm={this.state.orgFormEntries}\r\n          onNext={this.handleNext}\r\n          onConfirm={this.handleSaveOrg}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.SUBMISSION) {\r\n      content = <OrgSubmission />;\r\n    }\r\n    return (\r\n      <div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./Home\";\r\nimport { About } from \"./About\";\r\nimport { Events } from \"./Events\";\r\nimport AddEvent from \"./AddEvent\";\r\nimport Confirmation from \"./EventConfirmation\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  NavLink,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\";\r\n\r\nimport \"./css/App.css\";\r\nimport \"typeface-nunito-sans\";\r\nimport RegOrganization from \"./RegOrganization\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar\r\n          className=\"nav-wrapper\"\r\n          dark\r\n          expand=\"lg\"\r\n          style={{ outerHeight: \"100px\" }}\r\n        >\r\n          <div className=\"navtitle\">\r\n            <NavbarBrand className=\"title\" href=\"/\">\r\n              THE HOME PROJECT CALENDAR\r\n            </NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <span className=\"tabs\">\r\n              <Link className=\"links\" to=\"/Events\">\r\n                Events\r\n              </Link>\r\n              <NavLink\r\n                className=\"links\"\r\n                href=\"https://drive.google.com/drive/folders/1S2roKWt-aGCMwJwjUvboZDna0C8TG-z0\"\r\n                target=\"_blank\"\r\n              >\r\n                Toolkits\r\n              </NavLink>\r\n              <Link className=\"links\" to=\"/About\">\r\n                About Us\r\n              </Link>\r\n              <Link className=\"links\" to=\"/AddEvent\">\r\n                Add Event\r\n              </Link>\r\n              {/* <Dropdown className=\"links\" isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}> */}\r\n              {/* <UncontrolledDropdown inNavbar className=\"links\">\r\n              <DropdownToggle nav caret className=\"links\">Register</DropdownToggle>\r\n              <DropdownMenu right>\r\n                <Link to=\"/RegOrganization\">\r\n                  Add Organization\r\n                </Link> <br/>\r\n                <Link to=\"/AddEvent\">Add Event</Link>\r\n              </DropdownMenu>\r\n              </UncontrolledDropdown> */}\r\n              {/* </Dropdown> */}\r\n            </span>\r\n          </Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/About\" component={About} />\r\n          <Route path=\"/Events\" component={Events} />\r\n          <Route path=\"/AddEvent\" component={AddEvent} />\r\n          <Route path=\"/RegOrganization\" component={RegOrganization} />\r\n          {/* <Route path = \"/Calendar\" component = { Calendar } /> */}\r\n        </Switch>\r\n        {/* <div className=\"footer\">\r\n          <div className=\"footer-title\">Contact Us</div> <br />\r\n          <div className=\"footer-content\">\r\n            <span>Pyramid Communications</span>\r\n            <span>marketing@pyramidcommunications.com</span>\r\n            <span>206.374.7788</span>\r\n            <span>1932 First Avenue Suite 507, Seattle, WA 98101</span>\r\n          </div>\r\n        </div> */}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}