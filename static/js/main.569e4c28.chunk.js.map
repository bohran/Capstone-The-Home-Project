{"version":3,"sources":["img/Seattle-WA.jpg","img/tent.jpg","AddOrganizationForm.js","Home.js","AddEventForm.js","Events.js","Confirmation.js","AddEvent.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AddOrganizationForm","console","log","this","props","form","react_default","a","createElement","className","Form","FormGroup","Label","Input","type","name","placeholder","value","onChange","for","category","mission","contactName","contactRole","contactPhone","contactEmail","website","Button","variant","Component","Home","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","dist","blur","bgImage","require","strength","style","defineProperty","color","marginTop","fontSize","height","fontWeight","min","max","NewEvent","title","eventType","eventDescr","date","startTime","endTime","eventAddress","eventCity","eventCounty","eventZip","creatorFName","creatorLName","creatorEmail","coordinatorFName","coordinatorLName","coordinatorEmail","id","Events","_this","call","handleCardClick","index","state","data","description","setState","modal","toggle","isLoading","previous","_this2","req","Request","fetch","then","response","json","results","articles","_this3","content","map","d","i","imageSrc","urlToImage","CardImg","size","src","display","alt","CardGroup","Card","width","CardBody","CardTitle","CardSubtitle","react_fontawesome_index_es","icon","faMapMarkerAlt","faClock","faCalendar","publishedAt","onClick","bind","textAlign","tag","Link","to","Nav","vertical","check","flexDirection","flexWrap","flexBasis","marginLeft","Modal","isOpen","ModalHeader","ModalBody","backgroundColor","float","Confirmation","eventForm","Stage","ORGANIZATION","EVENT_DETAILS","CONFIRMATION","AddEvent","currentStage","orgFormEntries","eventFormEntries","handleChangeOrg","event","updateOrgForm","_","cloneDeep","target","handleChangeEvent","updateEventForm","handleNext","newStage","src_AddOrganizationForm","AddEventForm","src_Confirmation","orgForm","Contact","class","Row","App","react_router_dom","Navbar","dark","expand","outerHeight","NavbarBrand","href","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.569e4c28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Seattle-WA.b35ea697.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tent.d5d6a4c0.jpg\";","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/Organization.css\";\r\n\r\nclass AddOrganizationForm extends Component {\r\n  render() {\r\n    console.log(this.props.form);\r\n    \r\n    return (\r\n      <div>\r\n        <h2 className=\"orgPageTitle\">SELECT AN ORGANIZATION</h2>\r\n\r\n        {/* <div className=\"selectOrg\">\r\n          <Form>\r\n            <FormGroup controlId=\"formGridName\">\r\n              <h5>Organization Name</h5>\r\n              <Input\r\n                type=\"select\"\r\n                mame=\"name\"\r\n                onChange={this.handleChange}\r\n                value={this.props.form.name}\r\n              >\r\n                <option>Choose...</option>\r\n                <option>Option 1</option>\r\n                <option>Option 2</option>\r\n                <option>Option 3</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Form>\r\n        </div> */}\r\n\r\n        <h6 className=\"newOrgButton\">\r\n          Don't see your Organization listed? Click Here.\r\n        </h6>\r\n\r\n        {/* Adding a new Form */}\r\n        <div className=\"addOrg\">\r\n          <Form>\r\n            <h5>Organization Information:</h5>\r\n              <FormGroup>\r\n                <Label>Organization Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Organization Name\"\r\n                  value={this.props.form.name}\r\n                  onChange={this.props.onChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup >\r\n                <Label for=\"exampleSelect\">Organization Category</Label>\r\n                <Input type=\"select\" name=\"category\"\r\n                value={this.props.form.category}\r\n                onChange={this.props.onChange}>\r\n                  <option>Choose...</option>\r\n                  <option>Option 1</option>\r\n                  <option>Option 2</option>\r\n                  <option>Option 3</option>\r\n                </Input>\r\n              </FormGroup>\r\n            <FormGroup>\r\n              <Label>Organization Mission Statement</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"mission\"\r\n                placeholder=\"Enter Mission Statement\"\r\n                value={this.props.form.mission}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <h5>Organization Contact:</h5>\r\n\r\n              <FormGroup>\r\n                <Label>Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"contactName\"\r\n                  placeholder=\"Enter Contact Name\"\r\n                  value={this.props.form.contactName}\r\n                onChange={this.props.onChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Role</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"contactRole\"\r\n                  placeholder=\"Enter Contact Role\"\r\n                  value={this.props.form.contactRole}\r\n                  onChange={this.props.onChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Phone</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"contactPhone\"\r\n                  placeholder=\"Enter Contact Phone\"\r\n                  value={this.props.form.contactPhone}\r\n                  onChange={this.props.onChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"contactEmail\"\r\n                  placeholder=\"Enter Contact Email\"\r\n                  value={this.props.form.contactEmail}\r\n                  onChange={this.props.onChange}\r\n                />\r\n              </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Organization Website</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"website\"\r\n                placeholder=\"Enter Organization Website\"\r\n                value={this.props.form.website}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button variant=\"\" type=\"addMedia\">\r\n                Add Media\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddOrganizationForm.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddOrganizationForm;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, NavbarBrand } from \"mdbreact\";\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'mdbreact/dist/css/style.css';\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Organization } from './AddOrganizationForm';\r\n// import { Parallax, ParallaxBanner, ParallaxProvider } from 'react-scroll-parallax';\r\nimport { Parallax, Background } from 'react-parallax';\r\n\r\nimport './css/Home.css';\r\n\r\n\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (<div className=\"homeBody\">\r\n            <Parallax\r\n                blur={7}\r\n                bgImage={require('./img/Seattle-WA.jpg')}\r\n                strength={1000}>\r\n                <h1 style={{ color: \"white\" , marginTop: \"100px\", fontSize: \"150px\", color: \"#fafaed\"}}>#SeattleForAll</h1>\r\n                <div style={{ height: '300px' }} />\r\n            </Parallax>\r\n            <h1 style ={{fontSize: '100px', fontWeight:'bold'}}>The Home Project</h1>\r\n            <h2>An Engagement and Advocacy Initiative with One Goal:</h2>\r\n            <h2>A Home for Everyone in King County</h2>\r\n            <br/>\r\n            {/* <h1 style = {{textTransform:\"uppercase\"}}>Through the Home Shows, we came together as a one community to fight homelessness.</h1> */}\r\n            <Parallax\r\n                blur={{ min: -15, max: 15 }}\r\n                bgImage={require('./img/tent.jpg')}\r\n                strength={1000}>\r\n            <div style={{ height: '500px' }} />\r\n            </Parallax>\r\n            <h1>About Us</h1>\r\n        </div>)\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/Organization.css\";\r\n\r\nclass NewEvent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"orgPageTitle\">ADD AN EVENT</h2>\r\n\r\n        <div className=\"addEvent\">\r\n          <Form>\r\n            <h5>Event Information:</h5>\r\n            <FormGroup>\r\n              <Label>Event Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Enter Event Title\"\r\n                value={this.props.form.title}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <h5>Event Category</h5>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"eventType\"\r\n                value={this.props.form.eventType}\r\n                onChange={this.props.onChange}\r\n              >\r\n                <option>Choose...</option>\r\n                <option>Option 1</option>\r\n                <option>Option 2</option>\r\n                <option>Option 3</option>\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Description</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"eventDescr\"\r\n                placeholder=\"Enter Event Description\"\r\n                value={this.props.form.eventDescr}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Date</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"date\"\r\n                placeholder=\"Enter Event Date\"\r\n                value={this.props.form.date}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Start Time</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"startTime\"\r\n                placeholder=\"Enter Event Start Time\"\r\n                value={this.props.form.startTime}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>End Time</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"endTime\"\r\n                placeholder=\"Enter Event End Time\"\r\n                value={this.props.form.endTime}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Address</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"eventAddress\"\r\n                placeholder=\"e.g. 1234 Main St.\"\r\n                value={this.props.form.eventAddress}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event City</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"eventCity\"\r\n                placeholder=\"e.g. Seattle\"\r\n                value={this.props.form.eventCity}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event County</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"eventCounty\"\r\n                placeholder=\"e.g. King\"\r\n                value={this.props.form.eventCounty}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Zip Code</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"eventZip\"\r\n                placeholder=\"e.g. 98105\"\r\n                value={this.props.form.eventZip}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <h5>Event Contact Information:</h5>\r\n\r\n            <FormGroup>\r\n              <Label>First Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"creatorFName\"\r\n                placeholder=\"Enter First Name\"\r\n                value={this.props.form.creatorFName}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Last Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"creatorLName\"\r\n                placeholder=\"Enter Last Name\"\r\n                value={this.props.form.creatorLName}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"creatorEmail\"\r\n                placeholder=\"Enter Contact Email\"\r\n                value={this.props.form.creatorEmail}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <h5>Event Coordinator Information:</h5>\r\n\r\n            <FormGroup>\r\n              <Label>First Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"coordinatorFName\"\r\n                placeholder=\"Enter First Name\"\r\n                value={this.props.form.coordinatorFName}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Last Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"coordinatorLName\"\r\n                placeholder=\"Enter Last Name\"\r\n                value={this.props.form.coordinatorLName}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"coordinatorEmail\"\r\n                placeholder=\"Enter Contact Email\"\r\n                value={this.props.form.coordinatorEmail}\r\n                onChange={this.props.onChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button variant=\"\" type=\"file\" name=\"file\" id=\"addMedia\">\r\n                Add Media\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewEvent.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewEvent;\r\n","import React, { Component } from \"react\";\r\nimport { AddEvent } from \"./AddEventForm\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardGroup,\r\n  Row,\r\n  CardDeck,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faMapMarkerAlt,\r\n  faClock,\r\n  faCalendar\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { NationalGeographicAPI } from \"national-geographic-api\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"./css/Events.css\";\r\n\r\nexport class Events extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      isLoading: false,\r\n      data: [],\r\n      value: 0,\r\n      previous: 0,\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n  handleCardClick = index => {\r\n    const title = this.state.data[index].title;\r\n    const description = this.state.data[index].description;\r\n    this.setState({\r\n      title: title,\r\n      description: description,\r\n      modal: true\r\n    });\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  // API from NewsAPI (headlines from National Geog)\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    let url =\r\n      \"https://newsapi.org/v2/everything?\" +\r\n      \"sources=national-geographic&\" +\r\n      \"apiKey=de4895b190034f1897ca47779c016325\";\r\n    let req = new Request(url);\r\n    fetch(req)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(results => {\r\n        this.setState({\r\n          data: results.articles,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const content = this.state.data.map((d, i) => {\r\n      let imageSrc = d.urlToImage;\r\n      if (d.urlToImage == null) {\r\n        imageSrc = <br />;\r\n      } else {\r\n        imageSrc = (\r\n          <div className=\"image\">\r\n            <CardImg\r\n              size=\"cover\"\r\n              src={imageSrc}\r\n              display=\"block\"\r\n              alt={d.title}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"events\" key={\"event\" + i}>\r\n        <CardGroup>\r\n          <Card>\r\n            <div className=\"image\">\r\n              <CardImg src={d.urlToImage} style={{ width: \"100%\" }} />\r\n              <CardBody>\r\n                <CardTitle>{d.title}</CardTitle>\r\n                <CardSubtitle>\r\n                  <FontAwesomeIcon icon={faMapMarkerAlt} /> {d.description}\r\n                </CardSubtitle>\r\n                <CardSubtitle>\r\n                  <FontAwesomeIcon icon={faClock} /> 6:00-8:30PM\r\n                </CardSubtitle>\r\n                <CardSubtitle>\r\n                  <FontAwesomeIcon icon={faCalendar} />\r\n                  {d.publishedAt}\r\n                </CardSubtitle>\r\n                <Button\r\n                  className=\"learn\"\r\n                  onClick={this.handleCardClick.bind(null, i)}\r\n                >\r\n                  learn more\r\n                </Button>\r\n              </CardBody>\r\n            </div>\r\n          </Card>\r\n          </CardGroup>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n          Events that match your search:\r\n        </h2>\r\n        <div className=\"add\">\r\n          <Button tag={Link} to=\"/AddEvent\">\r\n            + Add Event\r\n          </Button>\r\n        </div>\r\n        <Nav vertical className=\"sidebar\">\r\n          <div className=\"categories\">\r\n            <h4>Select an Action:</h4>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Give\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Learn\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Volunteer\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio1\" /> Activism\r\n              </Label>\r\n            </FormGroup>\r\n          </div>\r\n          <br />\r\n          <div className=\"filters\">\r\n            <h4>Select Area of Service:</h4>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"check1\" /> Housing/Shelter\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"check1\" /> Legal/Employment\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"check1\" /> Day Centers\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"check1\" /> Basic Needs\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"check1\" /> Health/Wellness\r\n              </Label>\r\n            </FormGroup>\r\n            <br />\r\n            <div className=\"location\">\r\n              <h4>Select Location:</h4>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Seattle\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Bellevue\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Everett\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Burien\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Kirkland\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Bothell\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Renton\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Redmond\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Tacoma\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Olympia\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"check1\" /> Lakewood\r\n                </Label>\r\n              </FormGroup>\r\n            </div>\r\n            <br />\r\n            <div className=\"date\">\r\n              <h4>Select Date:</h4>\r\n              <FormGroup>\r\n                <Input\r\n                  style={{ width: \"50%\" }}\r\n                  type=\"select\"\r\n                  id=\"exampleSelect\"\r\n                >\r\n                  <option>All</option>\r\n                  <option>Today</option>\r\n                  <option>Tomorrow</option>\r\n                  <option>This Week</option>\r\n                  <option>This Weekend</option>\r\n                  <option>This Month</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n        </Nav>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            flexBasis: 1,\r\n            marginLeft: \"50px\"\r\n          }}\r\n        >\r\n          {/* <LoadingScreen\r\n            loading={this.state.isLoading}\r\n            bgColor=\"#f1f1f1\"\r\n            spinnerColor=\"#9ee5f8\"\r\n            textColor=\"#676767\"\r\n            text=\"loading...\"> */}\r\n            {content}\r\n          {/* </LoadingScreen> */}\r\n\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalHeader>{this.state.title}.</ModalHeader>\r\n            <ModalBody> {this.state.description}</ModalBody>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \" #cf0f2e\",\r\n                width: \"80px\",\r\n                float: \"right\",\r\n                marginLeft: \"80%\"\r\n              }}\r\n              onClick={this.toggle}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, FormGroup, Label} from \"reactstrap\";\r\nimport './css/App.css';\r\n\r\nclass Confirmation extends Component {\r\n  render() {\r\n    console.log(this.props.eventForm)\r\n    return (\r\n      <section>\r\n        <h2 className=\"orgPageTitle\">Almost there.</h2>\r\n\r\n        <div className=\"addEvent\">\r\n          <Form>\r\n            <h5>Please confirm your information before submitting.</h5>\r\n            <FormGroup>\r\n              <Label>Event Title: {this.props.eventForm.title}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <h5>Event Category: {this.props.eventForm.eventType}</h5>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Description: {this.props.eventForm.eventDescr}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Date: {this.props.eventForm.date}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Start Time: {this.props.eventForm.startTime}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>End Time: {this.props.eventForm.endTime}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Address: {this.props.eventForm.eventAddress}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event City: {this.props.eventForm.eventCity}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event County: {this.props.eventForm.eventCounty}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Event Zip Code: {this.props.eventForm.eventZip}</Label>\r\n            </FormGroup>\r\n\r\n            <h5>Event Contact Information:</h5>\r\n\r\n            <FormGroup>\r\n              <Label>First Name: {this.props.eventForm.creatorFName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Last Name: {this.props.eventForm.creatorLName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Email: {this.props.eventForm.creatorEmail}</Label>\r\n            </FormGroup>\r\n\r\n            <h5>Event Coordinator Information:</h5>\r\n\r\n            <FormGroup>\r\n              <Label>First Name: {this.props.eventForm.coordinatorFName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Last Name: {this.props.eventForm.coordinatorLName}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label>Email: {this.props.eventForm.coordinatorEmail}</Label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label>Media: </Label>\r\n            </FormGroup>\r\n          </Form>\r\n      </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  orgForm: PropTypes.object.isRequired,\r\n  eventForm: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Confirmation;\r\n\r\n","// AddEvent route takes you here\r\nimport React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport AddOrganizationForm from \"./AddOrganizationForm\";\r\nimport NewEvent from \"./AddEventForm\";\r\nimport Confirmation from \"./Confirmation\";\r\n\r\nconst Stage = {\r\n  ORGANIZATION: 0,\r\n  EVENT_DETAILS: 1,\r\n  CONFIRMATION: 2\r\n};\r\n\r\nexport default class AddEvent extends Component {\r\n  state = {\r\n    currentStage: Stage.ORGANIZATION,\r\n      // ONLY place where the data exists\r\n      orgFormEntries: {\r\n        name: \"\",\r\n        category: \"\",\r\n        mission: \"\",\r\n        contactName: \"\",\r\n        contactRole: \"\",\r\n        contactPhone: \"\",\r\n        contactEmail: \"\",\r\n        website: \"\"\r\n      },\r\n      eventFormEntries: {\r\n        title: \"\",\r\n        eventType: \"\",\r\n        eventDescr: \"\",\r\n        date: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        eventAddress: \"\",\r\n        eventCity: \"\",\r\n        eventCounty: \"\",\r\n        eventZip: \"\",\r\n        creatorFName: \"\",\r\n        creatorLName: \"\",\r\n        creatorEmail: \"\",\r\n        coordinatorFName: \"\",\r\n        coordinatorLName: \"\",\r\n        coordinatorEmail: \"\"\r\n      }\r\n  };\r\n\r\n  // change orgForms\r\n  handleChangeOrg = event => {\r\n    // Copy orgFormEntries\r\n    let updateOrgForm = _.cloneDeep(this.state.orgFormEntries);\r\n    // Update every field\r\n    updateOrgForm[event.target.name] = event.target.value;\r\n    // Set state og orgFormEntires with new copy\r\n    this.setState({\r\n      orgFormEntries: updateOrgForm\r\n    });\r\n  };\r\n\r\n  // change eventForms\r\n  handleChangeEvent = event => {\r\n    // Copy of eventFormEntries\r\n    let updateEventForm = _.cloneDeep(this.state.eventFormEntries);\r\n    // Check for each field\r\n    updateEventForm[event.target.name] = event.target.value;\r\n    // Set state to new form\r\n    this.setState({\r\n      eventFormEntries: updateEventForm\r\n    });\r\n  }\r\n\r\n  //change eventForms\r\n\r\n  handleNext = () => {\r\n    let newStage = this.state.currentStage + 1;\r\n    this.setState({\r\n      currentStage: newStage\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let content = \"\";\r\n    if (this.state.currentStage === Stage.ORGANIZATION) {\r\n      content = (\r\n        <AddOrganizationForm\r\n          form={this.state.orgFormEntries}\r\n          onChange={this.handleChangeOrg}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.EVENT_DETAILS) {\r\n      content = (\r\n        <NewEvent\r\n          form={this.state.eventFormEntries}\r\n          onChange={this.handleChangeEvent}\r\n        />\r\n      );\r\n    } else if (this.state.currentStage === Stage.CONFIRMATION) {\r\n      content = (\r\n        <Confirmation \r\n          orgForm={this.state.orgFormEntries} \r\n          eventForm={this.state.eventFormEntries}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {content}\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleNext}>\r\n          Continue\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nexport class Contact extends Component {\r\n  render() {\r\n    return (<div>\r\n        <h2 className=\"contactPageTitle\">Contact Us</h2>\r\n        <div class=\"formContainer\">\r\n            <div class=\"contactName\">\r\n            Pyramid Communications\r\n            </div>\r\n            <div class=\"contactInfo\">\r\n            marketing@pyramidcommunications.com\r\n            </div>\r\n            <div class=\"contactInfo\">\r\n            206.374.7788\r\n            </div>\r\n            <div class=\"contactInfo\">\r\n            1932 First Avenue Suite 507, Seattle, WA 98101  \r\n            </div>\r\n        </div>\r\n        <br/>\r\n        <h2 className=\"contactPageTitle\">Our Creators</h2>\r\n        <div class=\"membersContainer\">\r\n            <Row>\r\n                <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/shannon.jpg\" alt=\"Portrait of Shannon Gatta\"/>\r\n                    <h3>Shannon Gatta </h3>\r\n                    <h3><small>Data Scientist</small></h3>\r\n                    <p id=\"email\">sgatta@uw.edu</p>\r\n                </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/esha.jpg\"/>\r\n                <h3>Esha More</h3>\r\n                <h3><small>UX Designer</small></h3>\r\n                <p id=\"email\">moree@uw.edu </p> \r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/emma.jpeg\" alt=\"Portrait of Emma Ropes\"/>\r\n                    <h3>Emma Ropes</h3>\r\n                    <h3><small>Web Developer</small></h3>\r\n                    <p id=\"email\">eropes@uw.edu </p> \r\n                </div>\r\n            <div class=\"col-lg-3 col-sm-6 text-center mb-4\">\r\n                    <img class=\"rounded-circle img-fluid d-block mx-auto w-75\" src=\"./img/nicole.jpg\"/>\r\n                    <h3>Nicole Bohra</h3>\r\n                    <h3><small>Data Scientist</small></h3>\r\n                    <p id=\"email\">bohran@uw.edu</p>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { Home } from './Home';\r\nimport { Events } from './Events';\r\nimport AddEvent from './AddEvent';\r\nimport  {Contact}  from './Contact';\r\n// import{Calendar} from './Calendar';\r\n\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Jumbotron } from 'reactstrap';\r\n\r\nimport './css/App.css';\r\nimport 'typeface-nunito-sans';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n          <Navbar className='nav-wrapper' dark expand=\"lg\"style={{outerHeight:\"100px\"}}>\r\n          <div className = \"navtitle\">\r\n                <NavbarBrand className = \"title\" href = \"/\">The Home Project</NavbarBrand>\r\n                </div>\r\n                <div className = \"tabs\">\r\n                 <Link className = \"links\" to=\"/Events\">Events</Link>\r\n                 <Link className = \"links\" to=\"/About\">About Us</Link>\r\n                 <Link className = \"links\" to=\"/Contact\">Contact Us</Link> \r\n                 {/* <Link className = \"links\" to=\"/Calendar\">Calendar View</Link> */}\r\n                 </div>\r\n          </Navbar>\r\n          <Switch>\r\n            <Route exact path = \"/\" component = { Home } />\r\n            <Route path = \"/Events\" component = { Events } />\r\n            <Route path = \"/AddEvent\" component = { AddEvent } />\r\n            <Route path = \"/Contact\" component = { Contact } />\r\n            {/* <Route path = \"/Calendar\" component = { Calendar } /> */}\r\n          </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}